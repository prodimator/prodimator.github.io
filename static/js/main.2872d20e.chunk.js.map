{"version":3,"sources":["images/feature.png","images/blueprint.png","images/photo-camera.png","components/header/header.js","components/about/about.js","components/work-category/category.js","components/footer/footer.js","external/tables/components/modal/Modal.js","external/tables/components/table/Table.js","external/tables/App.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Welcome","react_default","a","createElement","className","About","Category","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isActive","active","state","img_src","type","WebDev","Design","Photography","concat","src","alt","Component","Footer","href","Modal","handleChange","event","setState","defineProperty","target","id","value","handleSubmit","e","preventDefault","data","n","parseInt","tableValues","x","m","w","d","console","log","reaction","handleCancel","color","onSubmit","onReset","onChange","disabled","window","innerWidth","defaultValue","Table","reverseTable","array","map","row","index","reverse","createTable","numOfItems","rows","Math","ceil","table","val","i","j","push","getDirection","rowNum","numRows","handleConfigureReaction","result","showModal","objectSpread","_this2","style","width","margin","key","length","item","onClick","components_modal_Modal","App","components_table_Table","setActive","category","react_router_dom","react_router","exact","path","category_Category","component","TablesApp","Boolean","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2872d20e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feature.1519d243.png\";","module.exports = __webpack_public_path__ + \"static/media/blueprint.49a21025.png\";","module.exports = __webpack_public_path__ + \"static/media/photo-camera.79314ad3.png\";","import React, { Component } from \"react\";\r\n\r\nimport './header.scss';\r\n\r\nexport default function Welcome() {\r\n    return (\r\n        <div className=\"header\">\r\n            <p>Prodimator</p>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport './about.scss';\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className=\"about shadow\">\r\n            <div className=\"left\">\r\n                <p className=\"title\">Ryan Wolfe</p>\r\n                <p className=\"about-me\">Hello! I am a developer and designer with years of experience creating and designing websites. I occasionally find myself behind the lens of a camera too. Check out my work or say hi!</p>\r\n            </div>\r\n            <div className=\"right\">\r\n                <p className=\"about-featured\">Featured</p>\r\n                <p className=\"about-featured-title\">Deloitte Digital Culture Site</p>\r\n                <div className=\"button\">View</div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport WebDev from '../../images/feature.png';\r\nimport Design from '../../images/blueprint.png';\r\nimport Photography from '../../images/photo-camera.png';\r\n\r\nimport './category.scss';\r\n\r\nexport default class Category extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            img_src: \"\",\r\n        };\r\n        switch (props.type) {\r\n            case \"Web Development\":\r\n                this.state.img_src = WebDev; \r\n                break;\r\n            case \"Design\":\r\n                this.state.img_src = Design; \r\n                break;\r\n            case \"Photography\":\r\n                this.state.img_src = Photography;\r\n                break;\r\n            default:\r\n            // code block\r\n        }\r\n    };\r\n    isActive = () => {\r\n        if (this.props.active){\r\n            return \"outline shadow\";\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className={`category ${this.isActive()}`}>\r\n                <img src={this.state.img_src} alt=\"icon\" className=\"icon\" />\r\n                <p className=\"category-type\">{this.props.type}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport './footer.scss';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-content\">\r\n                <p className=\"subtitle\">Contact</p>\r\n                <p className=\"email\">Email: rwolfe22@gmail.com</p>\r\n                <p className=\"linkedin\">LinkedIn: <a href=\"https://www.linkedin.com/in/ryanwolfe2/\">Ryan Wolfe</a></p>\r\n                <p className=\"copy\">© 2019 Prodimator</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport './Modal.scss'\r\n\r\nclass Modal extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            n: this.props.tableValues.n,\r\n            x: this.props.tableValues.x,\r\n            m: this.props.tableValues.m,\r\n            w: this.props.tableValues.w,\r\n            d: this.props.tableValues.d,\r\n            color: this.props.tableValues.color,\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            n: parseInt(this.state.n) ? parseInt(this.state.n) : this.props.tableValues.n,\r\n            x: parseInt(this.state.x) ? parseInt(this.state.x) : this.props.tableValues.x,\r\n            m: parseInt(this.state.m) ? parseInt(this.state.m) : this.props.tableValues.m,\r\n            w: parseInt(this.state.w) ? parseInt(this.state.w) : this.props.tableValues.w,\r\n            d: this.state.d,\r\n        }\r\n        console.log(data);\r\n        this.props.reaction(data);\r\n    }\r\n\r\n    handleCancel = (e) => {\r\n        e.preventDefault();\r\n        this.props.reaction('cancel');\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"modal\">\r\n                <div className=\"container modal-container\">\r\n                    <form onSubmit={this.handleSubmit} onReset={this.handleCancel}>\r\n                        <h5>Color: {this.state.color}</h5>\r\n                        <div className=\"input-field\">\r\n                            <span>N</span>\r\n                            =\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"n\"\r\n                                value={this.state.n}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <span>X</span>\r\n                            =\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"x\"\r\n                                value={this.state.x}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <span>M</span>\r\n                            =\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"m\"\r\n                                value={this.state.m}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <span>W</span>\r\n                            =\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"w\"\r\n                                value={this.state.w}\r\n                                disabled={window.innerWidth <= 812 ? true : false}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <span>D</span>\r\n                            =\r\n                            <select id=\"d\" onChange={this.handleChange} defaultValue={this.state.d}>\r\n                                <option id=\"default\" value=\"ltr-up\">LTR-UP</option>\r\n                                <option id=\"default\" value=\"ltr-dn\">LTR-DN</option>\r\n                                <option id=\"default\" value=\"rtl-up\">RTL-UP</option>\r\n                                <option id=\"default\" value=\"rtl-dn\">RTL-DN</option>\r\n                            </select>\r\n                        </div>\r\n                        <button className=\"btn btn-primary my-sm\" type=\"submit\">OK</button>\r\n                        &nbsp;\r\n                        <button className=\"btn btn-primary my-sm\" type=\"reset\">Cancel</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport Modal from '../modal/Modal';\r\n\r\nimport './Table.scss';\r\n\r\nclass Table extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            n: this.props.tableValues.n,\r\n            x: this.props.tableValues.x,\r\n            m: this.props.tableValues.m,\r\n            w: this.props.tableValues.w,\r\n            d: this.props.tableValues.d,\r\n            color: this.props.tableValues.color,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    reverseTable = (array) => {\r\n        array.map((row, index) => (\r\n            row.reverse()\r\n        ));\r\n        array.reverse();\r\n    }\r\n\r\n    createTable = () => {\r\n        let numOfItems = (this.state.m - this.state.n) / this.state.x\r\n        let rows = Math.ceil(numOfItems/ 5);\r\n\r\n        let table = [];\r\n        let val = this.state.n\r\n        for (let i = 0; i < rows; i++){\r\n            let row = [];\r\n            for (let j = 0; j < 5; j++){\r\n                if (val <= this.state.m){\r\n                    row.push(val);\r\n                }\r\n                else{\r\n                    row.push(\"\");\r\n                }\r\n                val += this.state.x;\r\n            }\r\n            table.push(row);\r\n        }\r\n\r\n        if (this.state.d === 'ltr-up' || this.state.d === 'rtl-up'){\r\n            this.reverseTable(table);\r\n        }\r\n        return table\r\n    }\r\n\r\n    getDirection = (rowNum, numRows) => {\r\n        //odd number of rows -- necessary since grid builds from the top down and I have to reverse the array\r\n        if (numRows % 2 === 1){\r\n            if (this.state.d === 'ltr-up' || this.state.d === 'rtl-dn'){\r\n                return rowNum % 2 === 0 ? 'reverse' : ''\r\n            }\r\n            else if (this.state.d === 'ltr-dn' || this.state.d === 'rtl-up'){\r\n                return rowNum % 2 === 1 ? 'reverse' : ''\r\n            }\r\n        }\r\n        //even number of rows\r\n        else{\r\n            if (this.state.d === 'ltr-up' || this.state.d === 'ltr-dn'){\r\n                return rowNum % 2 === 1 ? 'reverse' : ''\r\n            }\r\n            else if (this.state.d === 'rtl-dn' || this.state.d === 'rtl-up'){\r\n                return rowNum % 2 === 0 ? 'reverse' : ''\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleConfigureReaction = (result) => {\r\n        if (result === 'cancel'){\r\n            this.setState({ showModal: false});\r\n        }\r\n        else{\r\n            this.setState({\r\n                ...result,\r\n                showModal: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let table = this.createTable();\r\n        return (\r\n            <div style={{width: `${this.state.w}%`, margin: '20px'}} id={this.state.color}>\r\n                <div className={`table ${this.state.color}`} >\r\n                    {table.map((row, index) => (\r\n                        <div key={index} className={`row ${this.getDirection(index, table.length)}`}>\r\n                            {row.map((item, index) => (\r\n                                <div key={index} className={`grid-item ${item === '' ? 'gray' : ''}`}>{item}</div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <button onClick={() => this.setState({showModal: true})}>Configure</button>\r\n                {this.state.showModal &&\r\n                    <Modal reaction={this.handleConfigureReaction} tableValues={this.state} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table\r\n","import React, { Component } from 'react';\r\nimport Table from './components/table/Table';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        const tableRed = {\r\n            n: 8,\r\n            x: 1,\r\n            m: 29,\r\n            w: 20,\r\n            d: 'ltr-up',\r\n            color: 'red'\r\n        };\r\n        const tableGreen = {\r\n            n: 231,\r\n            x: 1,\r\n            m: 247,\r\n            w: 30,\r\n            d: 'ltr-up',\r\n            color: 'green'\r\n        };\r\n        const tableBlue = {\r\n            n: 47,\r\n            x: 2,\r\n            m: 81,\r\n            w: 40,\r\n            d: 'ltr-up',\r\n            color: 'blue'\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <Table tableValues={tableRed}/>\r\n                    <Table tableValues={tableGreen}/>\r\n                    <Table tableValues={tableBlue}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React, { Component } from 'react';\r\nimport Header from './components/header/header';\r\nimport About from './components/about/about';\r\nimport Category from './components/work-category/category';\r\nimport Footer from './components/footer/footer';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport './App.scss';\r\n\r\nimport TablesApp from './external/tables/App';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: \"WebDev\"\r\n    };\r\n  };\r\n  setActive = (category) => {\r\n    this.setState({\r\n      active: category\r\n    });\r\n  }\r\n  isActive = (category) => {\r\n    if (category === this.state.active) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <div className=\"App\">\r\n              <Header />\r\n              <div className=\"about-container\">\r\n                <About />\r\n              </div>\r\n              <div className=\"content\">\r\n                <p className=\"my-work title\">My Work</p>\r\n                <div className=\"categories-container\">\r\n                  <div className=\"col\" onClick={() => { this.setActive(\"WebDev\") }}>\r\n                    <Category type=\"Web Development\" active={this.isActive(\"WebDev\")} />\r\n                  </div>\r\n                  <div className=\"col\" onClick={() => { this.setActive(\"Design\") }}>\r\n                    <Category type=\"Design\" active={this.isActive(\"Design\")} />\r\n                  </div>\r\n                  <div className=\"col\" onClick={() => { this.setActive(\"Photography\") }}>\r\n                    <Category type=\"Photography\" active={this.isActive(\"Photography\")} />\r\n                  </div>\r\n                </div>\r\n                <p className=\"coming-soon\">Content incoming! Check back soon.</p>\r\n              </div>\r\n              <Footer />\r\n            </div>\r\n          </Route>\r\n          <Route exact path=\"/tables\" component={TablesApp} />\r\n        </Switch>\r\n\r\n\r\n      </Router>\r\n\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}