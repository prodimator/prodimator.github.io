{"version":3,"sources":["images/feature.png","images/blueprint.png","images/photo-camera.png","components/header/header.js","components/about/about.js","components/work-category/category.js","components/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Welcome","react_default","a","createElement","className","About","Category","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isActive","active","state","img_src","type","WebDev","Design","Photography","concat","src","alt","Component","Footer","href","App","setActive","category","setState","_this2","onClick","category_Category","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78d01dfd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feature.1519d243.png\";","module.exports = __webpack_public_path__ + \"static/media/blueprint.49a21025.png\";","module.exports = __webpack_public_path__ + \"static/media/photo-camera.79314ad3.png\";","import React, { Component } from \"react\";\n\nimport './header.scss';\n\nexport default function Welcome() {\n    return (\n        <div className=\"header\">\n            <p>Prodimator</p>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\n\nimport './about.scss';\n\nexport default function About() {\n    return (\n        <div className=\"about shadow\">\n            <div className=\"left\">\n                <p className=\"title\">Ryan Wolfe</p>\n                <p className=\"about-me\">Hello! I am a developer and designer with years of experience creating and designing websites. I occasionally find myself behind the lens of a camera too. Check out my work or say hi!</p>\n            </div>\n            <div className=\"right\">\n                <p className=\"about-featured\">Featured</p>\n                <p className=\"about-featured-title\">Deloitte Digital Culture Site</p>\n                <div className=\"button\">View</div>\n\n            </div>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport WebDev from '../../images/feature.png';\nimport Design from '../../images/blueprint.png';\nimport Photography from '../../images/photo-camera.png';\n\nimport './category.scss';\n\nexport default class Category extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            img_src: \"\",\n        };\n        switch (props.type) {\n            case \"Web Development\":\n                this.state.img_src = WebDev; \n                break;\n            case \"Design\":\n                this.state.img_src = Design; \n                break;\n            case \"Photography\":\n                this.state.img_src = Photography;\n                break;\n            default:\n            // code block\n        }\n    };\n    isActive = () => {\n        if (this.props.active){\n            return \"outline shadow\";\n        }\n    }\n    render(){\n        return (\n            <div className={`category ${this.isActive()}`}>\n                <img src={this.state.img_src} alt=\"icon\" className=\"icon\" />\n                <p className=\"category-type\">{this.props.type}</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport './footer.scss';\n\nexport default function Footer() {\n    return (\n        <div className=\"footer\">\n            <div className=\"footer-content\">\n                <p className=\"subtitle\">Contact</p>\n                <p className=\"email\">Email: rwolfe22@gmail.com</p>\n                <p className=\"linkedin\">LinkedIn: <a href=\"https://www.linkedin.com/in/ryanwolfe2/\">Ryan Wolfe</a></p>\n                <p className=\"copy\">Â© 2019 Prodimator</p>\n            </div>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport Header from './components/header/header';\nimport About from './components/about/about';\nimport Category from './components/work-category/category';\nimport Footer from './components/footer/footer';\nimport './App.scss';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: \"WebDev\"\n    };\n  };\n  setActive = (category) => {\n    this.setState({\n      active: category\n    });\n  }\n  isActive = (category) => {\n    if (category === this.state.active){\n      return true;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"about-container\">\n          <About />\n        </div>\n        <div className=\"content\">\n          <p className=\"my-work title\">My Work</p>\n          <div className=\"categories-container\">\n            <div className=\"col\" onClick={() => { this.setActive(\"WebDev\") }}>\n              <Category type=\"Web Development\" active={this.isActive(\"WebDev\")} />\n            </div>\n            <div className=\"col\" onClick={() => { this.setActive(\"Design\") }}>\n              <Category type=\"Design\" active={this.isActive(\"Design\")}/>\n            </div>\n            <div className=\"col\" onClick={() => { this.setActive(\"Photography\") }}>\n              <Category type=\"Photography\" active={this.isActive(\"Photography\")}/>\n            </div>\n          </div>\n          <p className=\"coming-soon\">Content incoming! Check back soon.</p>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}